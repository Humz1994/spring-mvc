<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.app.dao.tdepartment.TDepartmentMapper" >
<!-- redis 自动缓存 -->
<!--  <cache eviction="LRU" type="com.app.redis.RedisCache" />-->
  <resultMap id="BaseResultMap" type="com.app.model.TDepartment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="bak" property="bak" jdbcType="VARCHAR" />
    <result column="dname" property="dname" jdbcType="VARCHAR" />
    <result column="dsortNum" property="dsortnum" jdbcType="VARCHAR" />
    <result column="parentId" property="parentid" jdbcType="BIGINT" />
    <result column="zcgkid" property="zcgkid" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, bak, dname, dsortNum, parentId, zcgkid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_department
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultType="int">
    select 
    count(1)
    from t_department
   
  </select>
  <select id="selectListTdept" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_department where parentId= #{id,jdbcType=BIGINT} order by dsortNum
   
  </select>
  
  <select id="selectListTdeptByparentId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_department
    where parentId = #{id,jdbcType=BIGINT} order by dsortNum
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_department
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.app.model.TDepartment" useGeneratedKeys="true" keyProperty="id">
    insert into t_department (id, bak, dname, 
      dsortNum, parentId, zcgkid
      )
    values (#{id,jdbcType=BIGINT}, #{bak,jdbcType=VARCHAR}, #{dname,jdbcType=VARCHAR}, 
      #{dsortnum,jdbcType=VARCHAR}, #{parentid,jdbcType=BIGINT}, #{zcgkid,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective"   useGeneratedKeys="true" keyProperty="id" parameterType="com.app.model.TDepartment" >
    insert into t_department
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bak != null" >
        bak,
      </if>
      <if test="dname != null" >
        dname,
      </if>
      <if test="dsortnum != null" >
        dsortNum,
      </if>
      <if test="parentid != null" >
        parentId,
      </if>
      <if test="zcgkid != null" >
        zcgkid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="bak != null" >
        #{bak,jdbcType=VARCHAR},
      </if>
      <if test="dname != null" >
        #{dname,jdbcType=VARCHAR},
      </if>
      <if test="dsortnum != null" >
        #{dsortnum,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=BIGINT},
      </if>
      <if test="zcgkid != null" >
        #{zcgkid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.app.model.TDepartment" >
    update t_department
    <set >
      <if test="bak != null" >
        bak = #{bak,jdbcType=VARCHAR},
      </if>
      <if test="dname != null" >
        dname = #{dname,jdbcType=VARCHAR},
      </if>
      <if test="dsortnum != null" >
        dsortNum = #{dsortnum,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null" >
        parentId = #{parentid,jdbcType=BIGINT},
      </if>
      <if test="zcgkid != null" >
        zcgkid = #{zcgkid,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.app.model.TDepartment" >
    update t_department
    set bak = #{bak,jdbcType=VARCHAR},
      dname = #{dname,jdbcType=VARCHAR},
      dsortNum = #{dsortnum,jdbcType=VARCHAR},
      parentId = #{parentid,jdbcType=BIGINT},
      zcgkid = #{zcgkid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>